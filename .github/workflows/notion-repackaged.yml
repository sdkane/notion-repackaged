name: Notion Repackaged Main

on:
  push:
    branches: [main]
    paths:
      - 'notion-repackaged.sh'
      - '.github/workflows/notion-repackaged.yml'

  workflow_dispatch:
    inputs: {}

env:
  NOTION_REPACKAGED_DEBUG: true

jobs:
  preload-variables:
    name: Preload variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: preload-variables
        name: Load variables and set them as outputs
        run: |
          source notion-repackaged.sh

          echo "notion_version=$NOTION_VERSION" >> $GITHUB_OUTPUT
          echo "notion_repackaged_revision=$NOTION_REPACKAGED_REVISION" >> $GITHUB_OUTPUT
          echo "notion_download_hash=$NOTION_DOWNLOAD_HASH" >> $GITHUB_OUTPUT

          NOTION_REPACKAGED_VERSION_REV="${NOTION_VERSION}-${NOTION_REPACKAGED_REVISION}"
          echo "notion_repackaged_version_rev=$NOTION_REPACKAGED_VERSION_REV" >> $GITHUB_OUTPUT
    outputs:
      notion_version: ${{ steps.preload-variables.outputs.notion_version }}
      notion_repackaged_revision: ${{ steps.preload-variables.outputs.notion_repackaged_revision }}
      notion_repackaged_version_rev: ${{ steps.preload-variables.outputs.notion_repackaged_version_rev }}
      notion_download_hash: ${{ steps.preload-variables.outputs.notion_download_hash }}

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [preload-variables]
    steps:
      - uses: actions/checkout@v4
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.preload-variables.outputs.notion_repackaged_version_rev }}
          tag: v${{ needs.preload-variables.outputs.notion_repackaged_version_rev }}

  make-vanilla-sources:
    name: Make vanilla sources
    runs-on: ubuntu-latest
    needs: [preload-variables]
    env:
      NOTION_VERSION: ${{ needs.preload-variables.outputs.notion_version }}
      NOTION_REPACKAGED_REVISION: ${{ needs.preload-variables.outputs.notion_repackaged_revision }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install moreutils
        run: sudo apt-get install -y moreutils
      - name: Install asar
        run: npm install -g asar
      - name: Download official Windows build
        env:
          NOTION_DOWNLOAD_HASH: ${{ needs.preload-variables.outputs.notion_download_hash }}
        run: scripts/download-exe.sh
      - name: Extract sources from Windows Build
        run: scripts/extract-src.sh
      - name: Zip sources dir with 7z
        working-directory: build
        run: 7z a vanilla-src.zip vanilla-src
      - name: Save vanilla sources as artifact
        uses: actions/upload-artifact@v3
        with:
          name: vanilla-sources
          path: build/vanilla-src.zip
          
  build-app:
    name: Build app
    needs: [make-vanilla-sources, preload-variables, create-release] 
    runs-on: ubuntu-latest
    env:
      NOTION_VERSION: ${{ needs.preload-variables.outputs.notion_version }}
      NOTION_REPACKAGED_REVISION: ${{ needs.preload-variables.outputs.notion_repackaged_revision }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Retrieve saved sources
        uses: actions/download-artifact@v3
        with:
          name: vanilla-sources
          path: sources.zip
      - name: Unzip sources with 7z
        run: 7z x sources.zip
      - name: Install Linux build dependencies
        run: sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm libarchive-tools
      - name: Install dependencies
        working-directory: vanilla-src
        run: npm install
      - name: Run patch-package
        working-directory: vanilla-src
        run: npx patch-package
      - name: Install electron and electron-builder
        working-directory: vanilla-src
        run: npm install electron@31 electron-builder --save-dev
      - name: Run electron-builder
        working-directory: vanilla-src
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTION_REPACKAGED_EDITION: vanilla
        run: npx electron-builder --linux -c ../electron-builder.js
      - name: Print packages md5 checksums
        working-directory: vanilla-src
        run: find ./dist/ -maxdepth 1 -type f -exec openssl md5 {} +
        shell: bash
  cleanup:
    name: Cleanup artifacts
    if: always()
    needs: [build-app]
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: 'vanilla-sources'
